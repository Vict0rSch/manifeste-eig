#+title: Résumé du manifeste EIG

* Qui nous sommes (un paragraphe)

Nous sommes une trentaine de profils de techniciens (datascientistes,
développeurs, designers).  Nous avons tous eu une expérience
professionnelle hors de l'administration.  Le programme EIG nous a
permis de participer à un projet informatique au sein de
l'administration publique pendant dix mois.  Nous avons croisé nos
constats, identifié plusieurs problèmes récurrents et nous proposons
une série de six principes qui ont vocation à guider les décideurs et
les agents dans la définition et la mise en oeuvre d'un projet
informatique.

* Articulation des principes

Les principes vont par deux sur trois axes :

- Les principes qui ont surtout trait à la gestion des ressources
  humaines : *faire soi-même* (recruter, former, décloisonner) et
  *mobiliser* (impliquer les parties prenantes dans une gouvernance
  horizontale réactive).

- Les principes qui portent sur la « vision produit » (le niveau
  stratégique) : *limiter* (réduire le périmètre fonctionnel, la durée
  et donc les risques) et *améliorer* (privilégier des cycles courts, un
  maintien continu et une évolution constante).

- Les principes qui portent sur les aspects techniques : *composer*
  (créer des services interopérables pour gagner en souplesse) et
  *ouvrir* partager le code source pour mieux communiquer.

On peut imager ça avec un « hexagone vertueux » :

Faire → Limiter → Composer → Mobiliser → Améliorer → Ouvrir

Ça pourrait se lire ainsi :

- Faire soi-même incite à se limiter
- Se limiter implique de penser en termes de briques composables
- Des briques composables sont propices à la mobilisation
- La mobilisation permet une logique d'amélioration continue
- L'amélioration continue "s'augmente" avec l'ouverture

C'est forcément un peu arbitraire, mais je crois que le résumé doit
proposer une articulation, d'une façon ou d'une autre, montrant que 
tout se tient.

* Questions clefs

L'administration publique est responsable de ses outils informatiques.
Elle en assure la maîtrise, la continuité et la pérennité.  Voici une
liste de questions pour motiver le recours aux principes que nous
proposons.

- Mon service peut-il prendre en charge le développement d'un outil
  indispensable à mon métier au lieu de le confier à un tiers ?

- Le périmètre de l'outil que nous développons a-t-il été réduit au
  strict nécessaire ?

- L'outil que nous développons a-t-il été conçu pour s'interfacer avec
  des outils existants et pour exposer des données structurées ?

- Tous les profils d'utilisateurs de l'outil ont-ils été impliqués
  dans sa conception ?  Sont-ils impliqués dans des tests continus ?

- Le code source de l'outil que nous développons est il ouvert ?
  Publions-nous une feuille de route et guidons-nous les contributeurs
  potentiels vers les contributions qui nous importent ?

Ces questions peuvent être posées par tout le monde à tout moment.
